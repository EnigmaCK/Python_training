<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.9 (Python 3.6.3 on win32)" generated="20171201 12:07:57.867">
<suite id="s1" name="Group Scenarios" source="D:\Learning\Python 2017\Python_training\rf\group_scenarios.robot">
<kw name="Init Fixtures" library="rf.AddressBook" type="setup">
<status status="PASS" starttime="20171201 12:07:58.226" endtime="20171201 12:08:04.774"></status>
</kw>
<test id="s1-t1" name="Add new group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20171201 12:08:04.788" level="INFO">${old_list} = [9: modified name; new header; footerEZIaXtysk195N, 17: namec; headerNn8taTr; footer87JLvD9ilAd4c, 18: namemaoTE; headerXm6; footerbDTs1LeC9ysD7yM, 19: modified name; new header; footerEZIaXtysk195N, ...</msg>
<status status="PASS" starttime="20171201 12:08:04.776" endtime="20171201 12:08:04.788"></status>
</kw>
<kw name="New Group" library="rf.AddressBook">
<arguments>
<arg>name1</arg>
<arg>header1</arg>
<arg>footer1</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20171201 12:08:04.789" level="INFO">${group} = None: name1; header1; footer1</msg>
<status status="PASS" starttime="20171201 12:08:04.789" endtime="20171201 12:08:04.789"></status>
</kw>
<kw name="Create Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20171201 12:08:04.790" endtime="20171201 12:08:06.642"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20171201 12:08:06.663" level="INFO">${new_list} = [9: modified name; new header; footerEZIaXtysk195N, 17: namec; headerNn8taTr; footer87JLvD9ilAd4c, 18: namemaoTE; headerXm6; footerbDTs1LeC9ysD7yM, 19: modified name; new header; footerEZIaXtysk195N, ...</msg>
<status status="PASS" starttime="20171201 12:08:06.649" endtime="20171201 12:08:06.664"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20171201 12:08:06.665" endtime="20171201 12:08:06.665"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20171201 12:08:06.666" endtime="20171201 12:08:06.667"></status>
</kw>
<status status="PASS" starttime="20171201 12:08:04.774" endtime="20171201 12:08:06.668" critical="yes"></status>
</test>
<test id="s1-t2" name="Delete group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20171201 12:08:06.686" level="INFO">${old_list} = [9: modified name; new header; footerEZIaXtysk195N, 17: namec; headerNn8taTr; footer87JLvD9ilAd4c, 18: namemaoTE; headerXm6; footerbDTs1LeC9ysD7yM, 19: modified name; new header; footerEZIaXtysk195N, ...</msg>
<status status="PASS" starttime="20171201 12:08:06.672" endtime="20171201 12:08:06.687"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${old_list}</arg>
</arguments>
<assign>
<var>${len}</var>
</assign>
<msg timestamp="20171201 12:08:06.689" level="INFO">Length is 117</msg>
<msg timestamp="20171201 12:08:06.689" level="INFO">${len} = 117</msg>
<status status="PASS" starttime="20171201 12:08:06.688" endtime="20171201 12:08:06.689"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.randrange(${len})</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<msg timestamp="20171201 12:08:06.711" level="INFO">${index} = 3</msg>
<status status="PASS" starttime="20171201 12:08:06.690" endtime="20171201 12:08:06.711"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20171201 12:08:06.714" level="INFO">${group} = 19: modified name; new header; footerEZIaXtysk195N</msg>
<status status="PASS" starttime="20171201 12:08:06.713" endtime="20171201 12:08:06.715"></status>
</kw>
<kw name="Delete Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20171201 12:08:06.715" endtime="20171201 12:08:07.427"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20171201 12:08:07.441" level="INFO">${new_list} = [9: modified name; new header; footerEZIaXtysk195N, 17: namec; headerNn8taTr; footer87JLvD9ilAd4c, 18: namemaoTE; headerXm6; footerbDTs1LeC9ysD7yM, 21: ; ; , 25: ; ; , 27: namemaoTE; headerXm6; footer...</msg>
<status status="PASS" starttime="20171201 12:08:07.429" endtime="20171201 12:08:07.441"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20171201 12:08:07.442" endtime="20171201 12:08:07.443"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20171201 12:08:07.444" endtime="20171201 12:08:07.445"></status>
</kw>
<status status="PASS" starttime="20171201 12:08:06.670" endtime="20171201 12:08:07.445" critical="yes"></status>
</test>
<kw name="Destroy Fixtures" library="rf.AddressBook" type="teardown">
<status status="PASS" starttime="20171201 12:08:07.449" endtime="20171201 12:08:10.756"></status>
</kw>
<status status="PASS" starttime="20171201 12:07:57.876" endtime="20171201 12:08:10.756"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="Group Scenarios">Group Scenarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
